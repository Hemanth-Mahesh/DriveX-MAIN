#!/bin/bash

# Define your container names
KAFKA_CONTAINER="kafka"
ZOOKEEPER_CONTAINER="zookeeper"
CONNECTOR_CONTAINER="connect"
DJANGO_PROJECT_DIR="/path/to/your/django/project" # Replace with your Django project directory
CONNECTOR_URL="http://localhost:8083/connectors/" # URL for the connector registration

# Function to stop and remove containers
stop_and_remove_containers() {
    echo "Stopping and removing containers..."
    docker stop $KAFKA_CONTAINER
    docker stop $ZOOKEEPER_CONTAINER
    docker stop $CONNECTOR_CONTAINER

    docker rm $KAFKA_CONTAINER
    docker rm $ZOOKEEPER_CONTAINER
    docker rm $CONNECTOR_CONTAINER
}

# Function to run Zookeeper container
run_zookeeper_container() {
    echo "Running Zookeeper container..."
    docker run -it -d --name zookeeper -p 2181:2181 -p 2888:2888 -p 3888:3888 quay.io/debezium/zookeeper:2.5
}

# Function to run Kafka container
run_kafka_container() {
    echo "Running Kafka container..."
    docker run -it -d --name kafka -p 9092:9092 --link zookeeper:zookeeper quay.io/debezium/kafka:2.5
}

# Function to run Connector container
run_connector_container() {
    echo "Running Connector container..."
    docker run -it -d --name connect -p 8083:8083 -e GROUP_ID=1 -e CONFIG_STORAGE_TOPIC=my_connect_configs -e OFFSET_STORAGE_TOPIC=my_connect_offsets -e STATUS_STORAGE_TOPIC=my_connect_statuses --link kafka:kafka -e MYSQL_HOST=13.126.20.125 -e MYSQL_PORT=3306 -e MYSQL_USER=datascience_readonly -e MYSQL_PASSWORD=vhdTQX1QiBXwY2XdpiEJoeysM0P5k8 quay.io/debezium/connect:2.5
}

# Function to register the MySQL connector
register_mysql_connector() {
    echo "Registering MySQL connector..."
    curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" $CONNECTOR_URL -d '{
        "name": "stream1",
        "config": {
            "connector.class": "io.debezium.connector.mysql.MySqlConnector",
            "tasks.max": "1",
            "database.hostname": "13.126.20.125",
            "database.port": "3306",
            "database.user": "datascience_readonly",
            "database.password": "vhdTQX1QiBXwY2XdpiEJoeysM0P5k8",
            "database.server.id": "10001",
            "topic.prefix": "datasync",
            "database.include.list": "_54a253e90fa4f239",
            "table.include.list": "_54a253e90fa4f239.tabItem,_54a253e90fa4f239.tabSupplier,_54a253e90fa4f239.`tabVehicle Inspection Assignment`",
            "schema.history.internal.kafka.bootstrap.servers": "kafka:9092",
            "schema.history.internal.kafka.topic": "schemahistory._54a253e90fa4f239",
            "connector.adapter": "mariadb"
        }
    }'
}

# Function to restart Django server
restart_django_server() {
    echo "Restarting Django server..."
    cd $DJANGO_PROJECT_DIR
    python manage.py runserver 0.0.0.0:8000 & # Adjust the port as needed
}

# Main function
main() {
    stop_and_remove_containers
    run_zookeeper_container
    run_kafka_container
    run_connector_container
    sleep 10 # Wait for the connector to be ready before registration
    register_mysql_connector
    restart_django_server
    echo "Streaming setup completed."
}

# Run the main function
main

#Save the script as debezium_streaming.sh
#Make it executable with chmod +x debezium_streaming.sh
#Run it using ./debezium_streaming.sh 
